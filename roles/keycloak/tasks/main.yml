---
- name: stop keycloak service
  systemd:
    name: keycloak
    daemon_reload: yes
    state: stopped
  ignore_errors: yes
  tags:
    - stop_keycloak

- name: delete keycloak directory
  file:
    path: '{{ item.path }}'
    state: absent
  with_items:
    - { path: '/opt/keycloak-{{ keycloak_version }}.tar.gz' }
    - { path: '/opt/keycloak-{{ keycloak_version }}' }
    - { path: '/opt/keycloak' }
    - { path: '/var/log/keycloak' }
  tags:
    - init_keycloak

- name: get public ip address 
  set_fact:
    ip4_pub: '{{ ansible_ens19.ipv4.address }}'
    ip4_prv: '{{ ansible_ens18.ipv4.address }}'
  tags:
    - host_ip

- name: download keycloak
  get_url:
    url: https://github.com/keycloak/keycloak/releases/download/{{ keycloak_version }}/keycloak-{{ keycloak_version }}.tar.gz
    dest: /opt/keycloak-{{ keycloak_version }}.tar.gz
    mode: '0644'
  tags:
  - init_keycloak

     #- name: copy keycloak
     #  copy:
     #    src: '{{ keycloak_version }}/keycloak-{{ keycloak_version }}.tar.gz'
     #    dest: /opt/keycloak-{{ keycloak_version }}.tar.gz
     #    owner: root
     #    group: root
     #    mode: '0644'
     #  tags:
     #  - init_keycloak

- name: untar keycloak
  unarchive:
    src: /opt/keycloak-{{ keycloak_version }}.tar.gz
    dest: /opt/
    owner: root
    group: root
    remote_src: yes
  tags:
  - init_keycloak

- name: link keycloak
  file:
    src: /opt/keycloak-{{ keycloak_version }}
    dest: /opt/keycloak
    state: link
  tags:
  - init_keycloak

- name: create essential directory for keycloak
  file:
    path: "{{ item.path }}"
    owner: root
    group: root
    mode: "0755"
    state: directory
  with_items:
    - { path: "/var/log/keycloak" }
    - { path: "/opt/keycloak/modules/system/layers/keycloak/org/postgresql/main" }
    - { path: "/opt/keycloak/domain/servers/{{ default_service_name }}/configuration" }
  tags:
    - init_keycloak

- name: download postgresql jdbc driver
  get_url:
    url: 'https://jdbc.postgresql.org/download/postgresql-{{ postgresql_jdbc_version }}.jar'
    dest: '/opt/keycloak/modules/system/layers/keycloak/org/postgresql/main'
    mode: '0644'
  tags:
    - postgresql

- name: copy postgresql template
  template:
    src: '{{ keycloak_version }}/module-jdbc.xml.j2'
    dest: '/opt/keycloak/modules/system/layers/keycloak/org/postgresql/main/module.xml'
  tags:
    - postgresql

- name: copy keycloak domain cluster master config files
  template:
    src: '{{ item.src }}'
    dest: '{{ item.dest }}'
  with_items:
    - { src: '{{ keycloak_version }}/domain.xml.j2', dest: '/opt/keycloak/domain/configuration/domain.xml' }
  when: keycloak_list[0] == inventory_hostname
  tags:
    - domain_cloak

- name: copy keycloak domain cluster host config files
  template:
    src: '{{ item.src }}'
    dest: '{{ item.dest }}'
  with_items:
    - { src: '{{ keycloak_version }}/host-master.xml.j2', dest: '/opt/keycloak/domain/configuration/host-master.xml' }
  when: keycloak_list[0] == inventory_hostname
  tags:
    - domain_cloak

- name: add master realm user
  shell: |
    /opt/keycloak/bin/add-user-keycloak.sh --domain --dc /opt/keycloak/domain/servers/{{ default_service_name }}/configuration --realm master --user {{ keycloak_mgmt_user }} --password {{ keycloak_mgmt_pass }}
  become: yes
  when: keycloak_list[0] == inventory_hostname
  tags:
    - domain_user

- name: add management user
  shell: |
    /opt/keycloak/bin/add-user.sh --user {{ keycloak_mgmt_user }} --password {{ keycloak_mgmt_pass }} --group {{ keycloak_mgmt_group }} --realm ManagementRealm --confirm-warning --display-secret
  become: yes
  register: adduser_output
  when: keycloak_list[0] == inventory_hostname
  tags:
    - management_user

- name: parse secret value
  set_fact:
    secret_value: '{{ adduser_output.stdout | join("") | regex_search(regexp, "\1") }}'
  vars:
    regexp: '.*value=\"(.*)\"'
  when: keycloak_list[0] == inventory_hostname
  tags:
    - management_user

- name: print secret_value
  debug:
    var: secret_value
  when: keycloak_list[0] == inventory_hostname
  tags:
    - management_user

- name: register adduser output
  add_host:
    name: adduser_key
    adduser_value: '{{ secret_value }}'
  when: keycloak_list[0] == inventory_hostname
  tags:
    - management_user

- name: copy keycloak domain cluster slave config files
  template:
    src: '{{ item.src }}'
    dest: '{{ item.dest }}'
  with_items:
    - { src: '{{ keycloak_version }}/host-slave.xml.j2', dest: '/opt/keycloak/domain/configuration/host-slave.xml' }
  when: keycloak_list[0] != inventory_hostname
  tags:
    - management_user

- name: register master server ip
  add_host:
    name: master_ip
    master_value: "{{ ip4_pub }}"
  when: keycloak_list[0] == inventory_hostname
  tags:
    - keycloak_service

- name: copt keycloak master service file
  template:
    src: "keycloak.service"
    dest: "/etc/systemd/system/keycloak.service"
  vars:
    host_config: "host-master.xml"
    master_ip4pub: "{{ hostvars['master_ip']['master_value'] }}"
  when: keycloak_list[0] == inventory_hostname
  tags:
    - keycloak_service

- name: copt keycloak slave service file
  template:
    src: "keycloak.service"
    dest: "/etc/systemd/system/keycloak.service"
  vars:
    host_config: "host-slave.xml"
    master_ip4pub: "{{ hostvars['master_ip']['master_value'] }}"
  when: keycloak_list[0] != inventory_hostname
  tags:
    - keycloak_service

- name: start master keycloak
  systemd:
    name: keycloak
    state: started
    daemon_reload: yes
  when: keycloak_list[0] == inventory_hostname
  tags:
    - master_service

- name: Waits for port 9990
  wait_for:
    host: '{{ ansible_ens19.ipv4.address }}'
    # host: '{{ ip4_pub }}'
    port: 9990
    delay: 3
    state: started
  when: keycloak_list[0] == inventory_hostname
  tags:
    - master_service

- name: start slave keycloak
  systemd:
    name: keycloak
    state: started
    daemon_reload: yes
  when: keycloak_list[0] != inventory_hostname
  tags:
    - slave_service
